global class ARTL_B2BFetchOrderDetails implements vlocity_cmt.VlocityOpenInterface {
    global Boolean invokeMethod(String methodName, Map<String, Object> input, Map<String, Object> outMap, Map<String, Object> options) {
        //try{
            if(methodName.equals('fetchPartyAccount')){
                fetchPartyAccount(input, outMap, options);
                return true;
            }
            if(methodName.equals('fetchBCPDCPMethod')){
                fetchBCPDCPMethod(input, outMap, options);
                return true;
            }
            
            if(methodName.equals('fetchOrderItem')){
                fetchOrderItem(input, outMap, options);
                return true;
            }
             if(methodName.equals('fetchTaskDetails')){
                fetchTaskDetails(input, outMap, options);
                return true;
            }
       /* }catch (Exception ex) {
        ARTL_Logger.error(ARTL_Constants.CONTROLLER, 'ARTL_B2BFetchOrderDetails:'+methodName, '', new Map<String, Object>{'Exception' => ex.getMessage(), 'LineNumber' => ex.getLineNumber()}, ex);
        }*/
        return false;
    }
    public static void fetchPartyAccount(Map<String, Object> input, Map<String, Object> outMap, Map<String, Object> options) {
        //try{
            System.debug('fetchPartyAccount 24');
            System.debug('input fetchPartyAccout -->>'+input.get('NBANumber'));
            String orderId = (String)input.get('OrderId');
            System.debug('orderId -->>'+orderId);
            String AccNumber = (String)input.get('NBANumber');
            String ipPartyResponseString = ARTL_B2BFetchPartyAccount.queryPartyJSONResponse(AccNumber,orderId);
            outMap.put('PartyResponse', (Map<String, Object>)JSON.deserializeUntyped(ipPartyResponseString));
        /*}catch(Exception ex){
            ARTL_Logger.error(ARTL_Constants.CONTROLLER, 'ARTL_B2BFetchOrderDetails:fetchPartyAccount', '', new Map<String, Object>{'Exception' => ex.getMessage(), 'LineNumber' => ex.getLineNumber()}, ex);
        }*/
    }
     public static void fetchBCPDCPMethod(Map<String, Object> input, Map<String, Object> outMap, Map<String, Object> options) {
        //try{
            //Map<String,Object> outputMap = new Map<String,Object>();
            System.debug('fetchBCPDCPMethod 40');
            System.debug('input BCPId -->>'+input.get('BCPId'));
            System.debug('input DCPId -->>'+input.get('DCPId'));
            String BCPId = String.valueOf(input.get('BCPId'));
            String DCPId = String.valueOf(input.get('DCPId'));
            String accNumber = String.valueOf(input.get('NBANumber'));
            String ipResponseString = ARTL_B2BFetchBCPDCPDetails.queryB2BBCPDCPJSONResponse(BCPId,DCPId,accNumber);
            System.debug('BCPDCPResponseString -->>'+ipResponseString);
            outMap.put('BCPDCPResponse', (Map<String, Object>)JSON.deserializeUntyped(ipResponseString));
        /*}catch(Exception ex){
            ARTL_Logger.error(ARTL_Constants.CONTROLLER, 'ARTL_B2BFetchOrderDetails:fetchBCPDCPMethod', '', new Map<String, Object>{'Exception' => ex.getMessage(), 'LineNumber' => ex.getLineNumber()}, ex);
        }*/
    }
    
    public static void fetchOrderItem(Map<String, Object> input, Map<String, Object> outMap, Map<String, Object> options) {
        try{
              String somOrdId = input.containsKey('somOrdId') ? String.valueOf(input.get('somOrdId')) : '';
              Double lsi = input.containsKey('lsi') ? Double.valueOf(input.get('lsi')) : 0;
              String baParent = input.containsKey('baParent') ? String.valueOf(input.get('baParent')) : '';
        	  OrderItem oi = [select id,ARTL_Latest_PO__r.ARTL_PO_Number__c, ARTL_Latest_PO__r.ARTL_PO_Date__c,ARTL_Latest_PO__r.Amount__c,Order.Account.Name, 
                              Order.Opportunity.Owner.Name, Order.Opportunity.Owner.LastName, vlocity_cmt__BillingAccountId__r.AccountNumber, vlocity_cmt__BillingAccountId__r.Account_Number__c,
                              order.PM_Team_Lead_Email__c, order.PM_Email__c, order.Quote.PM__r.LastName, order.Quote.PM__r.OIM_Id__c, Order.Opportunity.Owner.ManagerId,Order.Opportunity.Owner.Email,
                              ARTL_LSI__c, vlocity_cmt__BillingAccountId__r.Billing_Level__c,Order.Opportunity.Owner.FirstName,Order.Opportunity.Owner.Manager.Phone,Order.Opportunity.Owner.Manager.Email,
                              Order.Account.ARTL_Vertical_Segment__c, Order.Account.Parent.AccountNumber, order.Account.ARTL_License_Company__c, Order.Account.Short_Code__c,
                              order.Account.ARTL_Customer_Segment__c, order.Account.AccountNumber,vlocity_cmt__BillingAccountId__r.Parent.AccountNumber, order.Quote.PM__r.Phone, order.Quote.PM__r.FirstName, order.Quote.PM__r.Manager.FirstName,
                              order.Account.ARTL_Business_Circle_Region__c, order.Account.ARTL_PAN__c, Order.Account.ARTL_Service_Segment__c from OrderItem where 
                              Order.ARTL_SOMOrderId__c =:somOrdId  and ARTL_LSI__c =:lsi  and vlocity_cmt__BillingAccountId__r.Parent.AccountNumber =:baParent LIMIT 1];
          //  list<OrderItem> ordItmList = [Select Id,ARTL_LSI__c,vlocity_cmt__BillingAccountId__r.ParentId from OrderItem where ARTL_LSI__c='' AND vlocity_cmt__BillingAccountId__r.ParentId=''];
          			Map<String,Object> resBody = new Map<String,Object>();
            		resBody.put('StatusCode','SBL-B2B-8000');
            		resBody.put('StatusMessage','LSI details returned successfully.');
            		Map<String,Object> b2bList = new Map<String,Object>();
              List<Map<String,Object>> b2bListadd = new List<Map<String,Object>>();
            		Map<String,Object> b2b = new Map<String,Object>();
                    if(oi != null){
                        if(oi.ARTL_Latest_PO__c != null){
                            b2b.put('PONo',oi.ARTL_Latest_PO__r.ARTL_PO_Number__c);
                            //b2b.put('PODate',oi.ARTL_Latest_PO__r.ARTL_PO_Date__c);
                            if(String.isNotBlank(oi.ARTL_Latest_PO__r.ARTL_PO_Date__c)){
                              String poDt = oi.ARTL_Latest_PO__r.ARTL_PO_Date__c;
                              list<String> lstSplitDate = poDt.split('-');
                              Date poDate = date.newinstance(Integer.valueOf(lstSplitDate[0]), Integer.valueOf(lstSplitDate[1]), Integer.valueOf(lstSplitDate[2]));
                              b2b.put('PODate',poDate);  
                            }
            				b2b.put('POAmount',oi.ARTL_Latest_PO__r.Amount__c);
                        }else{
                            b2b.put('PONo','');
                            b2b.put('PODate','');
            				b2b.put('POAmount','');
                        }
                        b2b.put('PartyName',oi.Order.Account.Name);
                        b2b.put('KAMOLM',oi.Order.Opportunity.Owner.Name);
                        b2b.put('KAMTLLastName',oi.Order.Opportunity.Owner.LastName);
                        b2b.put('BillingAccountNumber',oi.vlocity_cmt__BillingAccountId__r.AccountNumber);
                        b2b.put('ZSMFirstName','');
                        b2b.put('PMTLEmail',oi.order.PM_Team_Lead_Email__c);
                        b2b.put('ProjectManagerEmail',oi.order.PM_Email__c);
                        if(oi.order.Quote != null && oi.order.Quote.PM__c != null){
                            b2b.put('PMTLOLM',oi.order.Quote.PM__r.OIM_Id__c);
                            b2b.put('PMTLLastName',oi.order.Quote.PM__r.LastName);
                            b2b.put('ProjectManagerLastName',oi.order.Quote.PM__r.LastName);
                            b2b.put('ProjectManagerOLM',oi.order.Quote.PM__r.LastName);
                            b2b.put('ProjectManagerPhone',oi.order.Quote.PM__r.Phone);
                            b2b.put('PMTLFirstName',oi.order.Quote.PM__r.Manager.FirstName);
                            b2b.put('ProjectManagerFirstName',oi.order.Quote.PM__r.FirstName);
                        }else{
                           b2b.put('PMTLOLM','');
                           b2b.put('PMTLLastName','');
                           b2b.put('ProjectManagerLastName','');
                           b2b.put('KAMTLPhone','');
                           b2b.put('ProjectManagerOLM','');
                           b2b.put('ProjectManagerPhone','');
                           b2b.put('PMTLFirstName','');
                           b2b.put('ProjectManagerFirstName','');
                        }
                        if(oi.Order.Opportunity.Owner.ManagerId != null){
                            b2b.put('KAMTLOLM',oi.Order.Opportunity.Owner.ManagerId);
                            b2b.put('KAMTLPhone',oi.Order.Opportunity.Owner.Manager.Phone);
                            b2b.put('KAMTLEmail',oi.Order.Opportunity.Owner.Manager.Email);
                        }else{
                            b2b.put('KAMTLOLM','');
                            b2b.put('KAMTLPhone','');
                            b2b.put('KAMTLEmail','');
                        }
                        b2b.put('CPHOLM','');
                        b2b.put('LegalEntity','');
                        b2b.put('IntegrationId','');
                        b2b.put('CMEmail','');
                        b2b.put('CMFirstName','');
                        b2b.put('TSMEmail','');
                        b2b.put('KAMContactNumber',oi.Order.Opportunity.Owner.Name);
                        b2b.put('Taxation','');
                        b2b.put('TSMContactNumber','');
                        b2b.put('TSMOLM','');
                        b2b.put('ORG_TYPE','');
                        b2b.put('NonBillingAccountNumber',oi.vlocity_cmt__BillingAccountId__r.AccountNumber);
                        b2b.put('ZSMOLM','');
                        b2b.put('FranchiseeCode','');
                        b2b.put('TSMLastName','');
                        b2b.put('KAMLastName',oi.Order.Opportunity.Owner.LastName);
                        b2b.put('LSINumber',oi.ARTL_LSI__c);
                        b2b.put('BillingLevel',oi.vlocity_cmt__BillingAccountId__r.Billing_Level__c);
                        b2b.put('VerticalSegment',oi.Order.Account.ARTL_Vertical_Segment__c);
                        b2b.put('ParentAccountNumber',oi.Order.Account.Parent.AccountNumber);
                        b2b.put('CPHFirstName','');
                        b2b.put('CPHPhone','');
                        b2b.put('KAMFirstName',oi.Order.Opportunity.Owner.FirstName);
                        b2b.put('LicenseCompany',oi.order.Account.ARTL_License_Company__c);
                        b2b.put('FXPartyAccountNumber','');
                        b2b.put('KAMTLFirstName',oi.Order.Opportunity.Owner.FirstName);
                        b2b.put('ShortCode',oi.Order.Account.Short_Code__c);
                        b2b.put('ZSMLastName','');
                        b2b.put('TSMFirstName','');
                        b2b.put('CustomerSegment',oi.order.Account.ARTL_Customer_Segment__c);
                        b2b.put('PartyAccountNumber',oi.order.Account.AccountNumber);
                        b2b.put('CPHLastName','');
                        b2b.put('CPHEmail','');
                        b2b.put('ZSMEmail','');
                        b2b.put('Store','');
                        b2b.put('PMTLPhone','');
                        b2b.put('Circle',oi.order.Account.ARTL_Business_Circle_Region__c);
                        b2b.put('CMOLM','');
                        b2b.put('CMLastName','');
                        b2b.put('ServiceSegment',oi.Order.Account.ARTL_Service_Segment__c);
                        b2b.put('CMContactNumber','');
                        b2b.put('KAMEmail',oi.Order.Opportunity.Owner.Email);
                        b2b.put('ZSMContactNumber','');
                        b2b.put('PANNumber',oi.order.Account.ARTL_PAN__c);
                    }
            		
            		Map<String,Object> b2bPartyCon = new Map<String,Object>();
            		b2bPartyCon.put('FirstName','');b2bPartyCon.put('LastName','');b2bPartyCon.put('Responsibility','');
            		b2bPartyCon.put('EmailAddress','');b2bPartyCon.put('CellularPhone','');
            	//	b2b.put('B2BPartyContact',b2bPartyCon);
            	    b2bList.put('B2BPartyContact',b2bPartyCon);
                      b2bListadd.add(b2b);
            		 b2bList.put('B2BLSI',b2bListadd);
            	    resBody.put('SFDCMessage',b2bList);
                    outMap.put('resBody',resBody);   
        }catch(Exception ex){

        }
    }
    public static void fetchTaskDetails(Map<String, Object> input, Map<String, Object> outMap, Map<String, Object> options) {
        try{
            String somOrdId = input.containsKey('somOrdId') ? String.valueOf(input.get('somOrdId')) : '';
            Double lsi = input.containsKey('lsi') ? Double.valueOf(input.get('lsi')) : 0;
            Map<String, Object> attMap = new Map<String, Object> ();
            Map<String,Object> resBody = new Map<String,Object>();
            Map<String,Object> sfdcMsg = new Map<String,Object>();
            Map<String,Object> lidffAttr = new Map<String,Object>();
            List<OrderItem> oiList = [select id,vlocity_cmt__AttributeSelectedValues__c, Order.Downtime_End__c, Order.PM_Email__c, Order.PM_Name__c,
                                      Order.Account.ARTL_Service_Segment__c,Order.ARTL_Currency_ISO_Code__c, vlocity_cmt__BillingAccountId__r.Parent.CreatedDate,
                                      Order.Opportunity.OwnerId, Order.Opportunity.Owner.Name, Order.PM_Phone__c, ARTL_Latest_PO__r.ARTL_PO_Number__c, ARTL_Latest_PO__c,
                                      Order.Account.ARTL_Business_Circle_Region__c, ARTL_Feasibility__c, vlocity_cmt__BillingAccountId__r.ARTL_Taxation__c, CND__c, CND_Date__c,
                                      Order.Account.ARTL_Legal_Entity__c, Order.ARTL_SOMOrderId__c, ARTL_FeasibilityIdCrossConnect__c, vlocity_cmt__BillingAccountId__c,
                                      Order.Account.BillingCity, Order.Account.BillingAddress, RFS__c, RFS_Date__c, Order.ARTL_Order_Type__c, vlocity_cmt__BillingAccountId__r.vlocity_cmt__PartyId__c,
                                      vlocity_cmt__BillingAccountId__r.Account_Number__c, CreatedDate, Order.Customer_Email__c, vlocity_cmt__BillingAccountId__r.ARTL_Billing_Pincode__c  
                                      from OrderItem where Order.ARTL_SOMOrderId__c =:somOrdId and ARTL_LSI__c =:lsi];
            if(oiList.size() > 0){
                for(OrderItem oi : oiList){
                    Map<String, Object> oiAttMap = new Map<String, Object> ();
                    if(oi.vlocity_cmt__AttributeSelectedValues__c != NULL){
                        oiAttMap = (Map<String, Object>) JSON.deserializeUntyped(oi.vlocity_cmt__AttributeSelectedValues__c);
                        if(oiAttMap != NULL){
                            for(String attKey : oiAttMap.keyset()){
                               attMap.put(attKey,oiAttMap.get(attKey)); 
                            }
                        }
                    }
                }
                if(attMap.size() > 0){
                    if(attMap.containsKey('ATT_INTERFACE')){
                        lidffAttr.put('Interface',attMap.get('ATT_INTERFACE'));
                    }else{
                        lidffAttr.put('Interface','');
                    }
                    if(attMap.containsKey('ATT_RTBH')){
                        lidffAttr.put('RTBH',attMap.get('ATT_RTBH'));
                    }else{
                        lidffAttr.put('RTBH','');
                    }
                    if(attMap.containsKey('ATT_HOLDTIME_BGPHYD')){
                        lidffAttr.put('BGPHoldtime',attMap.get('ATT_HOLDTIME_BGPHYD'));
                    }else{
                        lidffAttr.put('BGPHoldtime','');
                    }
                    if(attMap.containsKey('ATT_DEPENDENT_ID')){
                        lidffAttr.put('DependentId',attMap.get('ATT_DEPENDENT_ID'));
                    }else{
                        lidffAttr.put('DependentId','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV4_CE')){
                        lidffAttr.put('WANIPv4CESubnetMask',attMap.get('ATT_WAN_IPV4_CE'));
                    }else{
                        lidffAttr.put('WANIPv4CESubnetMask','');
                    }
                    if(attMap.containsKey('ATT_HANDOVER_TYPE')){
                        lidffAttr.put('HandoverType',attMap.get('ATT_HANDOVER_TYPE'));
                    }else{
                        lidffAttr.put('HandoverType','');
                    }
                    if(attMap.containsKey('ATT_CROSS_CONNECT_LOCATION_B')){
                        lidffAttr.put('CrossConnectLocB',attMap.get('ATT_CROSS_CONNECT_LOCATION_B'));
                    }else{
                        lidffAttr.put('CrossConnectLocB','');
                    }
                    if(attMap.containsKey('ATT_CROSS_CONNECT_LOCATION_A')){
                        lidffAttr.put('CrossConnectLocA',attMap.get('ATT_CROSS_CONNECT_LOCATION_A'));
                    }else{
                        lidffAttr.put('CrossConnectLocA','');
                    }
                    if(attMap.containsKey('ATT_PROCESS_ID')){
                        lidffAttr.put('OSPFProcessId',attMap.get('ATT_PROCESS_ID'));
                    }else{
                        lidffAttr.put('OSPFProcessId','');
                    }
                    if(attMap.containsKey('ATT_ROUTING_PROTOCOL')){
                        lidffAttr.put('RoutingProtocol',attMap.get('ATT_ROUTING_PROTOCOL'));
                    }else{
                        lidffAttr.put('RoutingProtocol','');
                    }
                    if(attMap.containsKey('ATT_DEPENDENT_LINK_LSI')){
                        lidffAttr.put('DependentLSIMedia',attMap.get('ATT_DEPENDENT_LINK_LSI'));
                    }else{
                        lidffAttr.put('DependentLSIMedia','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV6_CE')){
                        lidffAttr.put('WANIPv6CE',attMap.get('ATT_WAN_IPV6_CE'));
                    }else{
                        lidffAttr.put('WANIPv6CE','');
                    }
                    if(attMap.containsKey('ATT_Add_LAN_IPV4_Subnet')){
                        lidffAttr.put('AddLANIPV4Subnet',attMap.get('ATT_Add_LAN_IPV4_Subnet'));
                    }else{
                        lidffAttr.put('AddLANIPV4Subnet','');
                    }
                    if(attMap.containsKey('ATT_MEDIA')){
                        lidffAttr.put('MediaMode',attMap.get('ATT_MEDIA'));
                    }else{
                        lidffAttr.put('MediaMode','');
                    }
                    if(attMap.containsKey('ATT_Circuit_Type_CFS')){
                        lidffAttr.put('CircuitId',attMap.get('ATT_Circuit_Type_CFS'));
                    }else{
                        lidffAttr.put('CircuitId','');
                    }
                    if(attMap.containsKey('ATT_LAN_IPV4_SUBNET_MASK')){
                        lidffAttr.put('LANIPv4SubnetMask',attMap.get('ATT_LAN_IPV4_SUBNET_MASK'));
                    }else{
                        lidffAttr.put('LANIPv4SubnetMask','');
                    }
                    if(attMap.containsKey('ATT_DDOS_REQUIRED')){
                        lidffAttr.put('DDOSRequired',attMap.get('ATT_DDOS_REQUIRED'));
                    }else{
                        lidffAttr.put('DDOSRequired','');
                    }
                    if(attMap.containsKey('ATT_SubProductName')){
                        lidffAttr.put('SubProductName',attMap.get('ATT_SubProductName'));
                    }else{
                        lidffAttr.put('SubProductName','');
                    }
                    if(attMap.containsKey('ATT_RESTART_BGPHYD')){
                        lidffAttr.put('Restart',attMap.get('ATT_RESTART_BGPHYD'));
                    }else{
                        lidffAttr.put('Restart','');
                    }
                    if(attMap.containsKey('ATT_PAYMENT_TERM_MILESTONE2')){
                        lidffAttr.put('PTM2Name',attMap.get('ATT_PAYMENT_TERM_MILESTONE2'));
                    }else{
                        lidffAttr.put('PTM2Name','');
                    }
                    if(attMap.containsKey('ATT_ITEM_CODE')){
                        lidffAttr.put('ItemCode',attMap.get('ATT_ITEM_CODE'));
                    }else{
                        lidffAttr.put('ItemCode','');
                    }
                    if(attMap.containsKey('ATT_Product_Approval_for_Additional_IP')){
                        lidffAttr.put('ProductApprovalAddIP',attMap.get('ATT_Product_Approval_for_Additional_IP'));
                    }else{
                        lidffAttr.put('ProductApprovalAddIP','');
                    }
                    if(attMap.containsKey('ATT_SUB_ORDER_TYPE_CFS')){
                        lidffAttr.put('OEOrderSubType',attMap.get('ATT_SUB_ORDER_TYPE_CFS'));
                    }else{
                        lidffAttr.put('OEOrderSubType','');
                    }
                    if(attMap.containsKey('ATT_ITEM_DESCRIPTION')){
                        lidffAttr.put('ItemDescription',attMap.get('ATT_ITEM_DESCRIPTION'));
                    }else{
                        lidffAttr.put('ItemDescription','');
                    }
                    if(attMap.containsKey('ATT_BGP-REPLACE_AS_BGP')){
                        lidffAttr.put('BGPReplaceAS',attMap.get('ATT_BGP-REPLACE_AS_BGP'));
                    }else{
                        lidffAttr.put('BGPReplaceAS','');
                    }
                    if(attMap.containsKey('ATT_BGP_Log_BGPHYD')){
                        lidffAttr.put('BGPlog',attMap.get('ATT_BGP_Log_BGPHYD'));
                    }else{
                        lidffAttr.put('BGPlog','');
                    }
                    if(attMap.containsKey('ATT_PAYMENT_TERM_MILESTONE4_VALUE')){
                        lidffAttr.put('PTM4Value',attMap.get('ATT_PAYMENT_TERM_MILESTONE4_VALUE'));
                    }else{
                        lidffAttr.put('PTM4Value','');
                    }if(attMap.containsKey('ATT_DEPENDENT_LINK_MEDIA')){
                        lidffAttr.put('MediaType',attMap.get('ATT_DEPENDENT_LINK_MEDIA'));
                    }else{
                        lidffAttr.put('MediaType','');
                    }
                    if(attMap.containsKey('ATT_BGP_DAMPENING')){
                        lidffAttr.put('BGPdampening',attMap.get('ATT_BGP_DAMPENING'));
                    }else{
                        lidffAttr.put('BGPdampening','');
                    }
                    if(attMap.containsKey('ATT_Third_Party_feasibility_remarks')){
                        lidffAttr.put('TPFeasibilityRemarks',attMap.get('ATT_Third_Party_feasibility_remarks'));
                    }else{
                        lidffAttr.put('TPFeasibilityRemarks','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV4_PE')){
                        lidffAttr.put('WANIPv4PE',attMap.get('ATT_WAN_IPV4_PE'));
                    }else{
                        lidffAttr.put('WANIPv4PE','');
                    }
                    if(attMap.containsKey('ATT_FEASIBILITY_ID_CROSS_CONNECT')){
                        lidffAttr.put('CrossConnectFeasibilityId',attMap.get('ATT_FEASIBILITY_ID_CROSS_CONNECT'));
                    }else{
                        lidffAttr.put('CrossConnectFeasibilityId','');
                    }
                    if(attMap.containsKey('ATT_DELIVERY_CHALLAN_DATE')){
                        lidffAttr.put('DeliveryChallanDate',attMap.get('ATT_DELIVERY_CHALLAN_DATE'));
                    }else{
                        lidffAttr.put('DeliveryChallanDate','');
                    }
                    if(attMap.containsKey('ATT_LinkTopology')){
                        lidffAttr.put('LinkTopology',attMap.get('ATT_LinkTopology'));
                    }else{
                        lidffAttr.put('LinkTopology','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV4_CE_SUBNET_MASK')){
                        lidffAttr.put('WANIPV4Subnet3',attMap.get('ATT_WAN_IPV4_CE_SUBNET_MASK'));
                    }else{
                        lidffAttr.put('WANIPV4Subnet3','');
                    }
                    if(attMap.containsKey('ATT_EIGRP_Password')){
                        lidffAttr.put('EIGRPProcessId',attMap.get('ATT_EIGRP_Password'));
                    }else{
                        lidffAttr.put('EIGRPProcessId','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV4_PE_SUBNET_MASK')){
                        lidffAttr.put('WANIPV4Subnet2',attMap.get('ATT_WAN_IPV4_PE_SUBNET_MASK'));
                    }else{
                        lidffAttr.put('WANIPV4Subnet2','');
                    }
                    if(attMap.containsKey('ATT_AIRTEL_LOOPBACK_IP_BGPHYD')){
                        lidffAttr.put('AirtelLoopback',attMap.get('ATT_AIRTEL_LOOPBACK_IP_BGPHYD'));
                    }else{
                        lidffAttr.put('AirtelLoopback','');
                    }
                    if(attMap.containsKey('ATT_OSPF_Password')){
                        lidffAttr.put('OSPFPassword',attMap.get('ATT_OSPF_Password'));
                    }else{
                        lidffAttr.put('OSPFPassword','');
                    }
                    if(attMap.containsKey('ATT_REMOVE_PRIVATE_AS_BGPHYD')){
                        lidffAttr.put('RemovePrivateAs',attMap.get('ATT_REMOVE_PRIVATE_AS_BGPHYD'));
                    }else{
                        lidffAttr.put('RemovePrivateAs','');
                    }
                    if(attMap.containsKey('ATT_ACCESS_BANDWIDTH')){
                        lidffAttr.put('AccessBandwidth',attMap.get('ATT_ACCESS_BANDWIDTH'));
                    }else{
                        lidffAttr.put('AccessBandwidth','');
                    }
                    if(attMap.containsKey('ATT_PAYMENT_TERM_MILESTONE1')){
                        lidffAttr.put('PTM1Name',attMap.get('ATT_PAYMENT_TERM_MILESTONE1'));
                    }else{
                        lidffAttr.put('PTM1Name','');
                    }
                    if(attMap.containsKey('ATT_LAN_IPV6')){
                        lidffAttr.put('LANIPv6',attMap.get('ATT_LAN_IPV6'));
                    }else{
                        lidffAttr.put('LANIPv6','');
                    }
                    if(attMap.containsKey('ATT_FEASIBILITY_ID')){
                        lidffAttr.put('TPFeasibilityId',attMap.get('ATT_FEASIBILITY_ID'));
                    }else{
                        lidffAttr.put('TPFeasibilityId','');
                    }
                    if(attMap.containsKey('ATT_LAN_IPV4')){
                        lidffAttr.put('LANIPv4',attMap.get('ATT_LAN_IPV4'));
                    }else{
                        lidffAttr.put('LANIPv4','');
                    }
                    if(attMap.containsKey('ATT_EBGP_MULTIHOP_BGPHYD')){
                        lidffAttr.put('eBGPmultihop',attMap.get('ATT_EBGP_MULTIHOP_BGPHYD'));
                    }else{
                        lidffAttr.put('eBGPmultihop','');
                    }
                    if(attMap.containsKey('ATT_BFD_BGPHYD')){
                        lidffAttr.put('BFD',attMap.get('ATT_BFD_BGPHYD'));
                    }else{
                        lidffAttr.put('BFD','');
                    }
                    if(attMap.containsKey('ATT_WAREHOUSE_LOCATION')){
                        lidffAttr.put('WarehouseLocation',attMap.get('ATT_WAREHOUSE_LOCATION'));
                    }else{
                        lidffAttr.put('WarehouseLocation','');
                    }
                    if(attMap.containsKey('ATT_CROSS_CONNECT_MODE-CUSTOMER')){
                        lidffAttr.put('CrossConnectMode',attMap.get('ATT_CROSS_CONNECT_MODE-CUSTOMER'));
                    }else{
                        lidffAttr.put('CrossConnectMode','');
                    }
                    if(attMap.containsKey('ATT_MINIMUM_INTERVAL_BGPHYD')){
                        lidffAttr.put('MinimumInterval',attMap.get('ATT_MINIMUM_INTERVAL_BGPHYD'));
                    }else{
                        lidffAttr.put('MinimumInterval','');
                    }
                    if(attMap.containsKey('ATT_ROUTING_TYPE_MPLS')){
                        lidffAttr.put('RoutingType',attMap.get('ATT_ROUTING_TYPE_MPLS'));
                    }else{
                        lidffAttr.put('RoutingType','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV4_PE_SUBNET_MASK')){
                        lidffAttr.put('WANIPv4PESubnetMask',attMap.get('ATT_WAN_IPV4_PE_SUBNET_MASK'));
                    }else{
                        lidffAttr.put('WANIPv4PESubnetMask','');
                    }
                    if(attMap.containsKey('ATT_ROUTER_MAKE')){
                        lidffAttr.put('RouterMake',attMap.get('ATT_ROUTER_MAKE'));
                    }else{
                        lidffAttr.put('RouterMake','');
                    }
                    if(attMap.containsKey('ATT_REMOTE_LOOPBACK_IP_BGPHYD')){
                        lidffAttr.put('RemoteLoopbackIP',attMap.get('ATT_REMOTE_LOOPBACK_IP_BGPHYD'));
                    }else{
                        lidffAttr.put('RemoteLoopbackIP','');
                    }
                    if(attMap.containsKey('ATT_Delete_LAN_IPv6')){
                        lidffAttr.put('DeleteLANIPV6',attMap.get('ATT_Delete_LAN_IPv6'));
                    }else{
                        lidffAttr.put('DeleteLANIPV6','');
                    }
                    if(attMap.containsKey('ATT_Delete_LAN_IPv4')){
                        lidffAttr.put('DeleteLANIPV4',attMap.get('ATT_Delete_LAN_IPv4'));
                    }else{
                        lidffAttr.put('DeleteLANIPV4','');
                    }
                    if(attMap.containsKey('ATT_POP')){
                        lidffAttr.put('POP',attMap.get('ATT_POP'));
                    }else{
                        lidffAttr.put('POP','');
                    }
                    if(attMap.containsKey('ATT_CUSTOMER_LAN_IPV6')){
                        lidffAttr.put('CustomerLANIPV6',attMap.get('ATT_CUSTOMER_LAN_IPV6'));
                    }else{
                        lidffAttr.put('CustomerLANIPV6','');
                    }
                    if(attMap.containsKey('ATT_MTU_SIZE')){
                        lidffAttr.put('MTUSize',attMap.get('ATT_MTU_SIZE'));
                    }else{
                        lidffAttr.put('MTUSize','');
                    }
                    if(attMap.containsKey('ATT_BGP_SESSION_PER_LINK_BGPHYD')){
                        lidffAttr.put('BGPSessionPerLink',attMap.get('ATT_BGP_SESSION_PER_LINK_BGPHYD'));
                    }else{
                        lidffAttr.put('BGPSessionPerLink','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV6_CE_SUBNET_MASK')){
                        lidffAttr.put('WANIPv6Subnet',attMap.get('ATT_WAN_IPV6_CE_SUBNET_MASK'));
                    }else{
                        lidffAttr.put('WANIPv6Subnet','');
                    }
                    if(attMap.containsKey('ATT_CROSS_CONNECT_TYPE')){
                        lidffAttr.put('CrossConnectType',attMap.get('ATT_CROSS_CONNECT_TYPE'));
                    }else{
                        lidffAttr.put('CrossConnectType','');
                    }
                    if(attMap.containsKey('ATT_IP_REQUIRED')){
                        lidffAttr.put('IPRequired',attMap.get('ATT_IP_REQUIRED'));
                    }else{
                        lidffAttr.put('IPRequired','');
                    }
                    if(attMap.containsKey('ATT_ RSU')){
                        lidffAttr.put('RSUNWLocCode',attMap.get('ATT_ RSU'));
                    }else{
                        lidffAttr.put('RSUNWLocCode','');
                    }
                    if(attMap.containsKey('ATT_Third_Party_Name')){
                        lidffAttr.put('ThirdPartyName',attMap.get('ATT_Third_Party_Name'));
                    }else{
                        lidffAttr.put('ThirdPartyName','');
                    }
                    if(attMap.containsKey('ATT_REDUNDANCY')){
                        lidffAttr.put('Redundancy',attMap.get('ATT_REDUNDANCY'));
                    }else{
                        lidffAttr.put('Redundancy','');
                    }
                    if(attMap.containsKey('ATT_Additional_LAN_IPv6')){
                        lidffAttr.put('AdditionalProvisionedLANIPv6',attMap.get('ATT_Additional_LAN_IPv6'));
                    }else{
                        lidffAttr.put('AdditionalProvisionedLANIPv6','');
                    }
                    if(attMap.containsKey('ATT_Additional_LAN_IPv4')){
                        lidffAttr.put('AdditionalProvisionedLANIPv4',attMap.get('ATT_Additional_LAN_IPv4'));
                    }else{
                        lidffAttr.put('AdditionalProvisionedLANIPv4','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV6_CE_SUBNET_MASK')){
                        lidffAttr.put('WANIPv6CESubnetMask',attMap.get('ATT_WAN_IPV6_CE_SUBNET_MASK'));
                    }else{
                        lidffAttr.put('WANIPv6CESubnetMask','');
                    }
                    if(attMap.containsKey('ATT_VPN_TOPOLOGY')){
                        lidffAttr.put('VPNTopology',attMap.get('ATT_VPN_TOPOLOGY'));
                    }else{
                        lidffAttr.put('VPNTopology','');
                    }
                    if(attMap.containsKey('ATT_AS_OVERRIDE_BGPHYD')){
                        lidffAttr.put('AsOveride',attMap.get('ATT_AS_OVERRIDE_BGPHYD'));
                    }else{
                        lidffAttr.put('AsOveride','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV6_PE')){
                        lidffAttr.put('WANIPv6PE',attMap.get('ATT_WAN_IPV6_PE'));
                    }else{
                        lidffAttr.put('WANIPv6PE','');
                    }
                    if(attMap.containsKey('ATT_Add_LAN_IPv6')){
                        lidffAttr.put('AddLANIPV6',attMap.get('ATT_Add_LAN_IPv6'));
                    }else{
                        lidffAttr.put('AddLANIPV6','');
                    }
                    if(attMap.containsKey('ATT_Add_LAN_IPv4')){
                        lidffAttr.put('AddLANIPV4',attMap.get('ATT_Add_LAN_IPv4'));
                    }else{
                        lidffAttr.put('AddLANIPV4','');
                    }
                    if(attMap.containsKey('ATT_WAREHOUSE_LOCATION')){
                        lidffAttr.put('Warehouse',attMap.get('ATT_WAREHOUSE_LOCATION'));
                    }else{
                        lidffAttr.put('Warehouse','');
                    }
                    if(attMap.containsKey('ATT_SITE_READINESS_STATUS')){
                        lidffAttr.put('SiteReadiness',attMap.get('ATT_SITE_READINESS_STATUS'));
                    }else{
                        lidffAttr.put('SiteReadiness','');
                    }
                    if(attMap.containsKey('ATT_BGP_PREFIX_LIMIT_BGPHYD')){
                        lidffAttr.put('BGPPrefixLimit',attMap.get('ATT_BGP_PREFIX_LIMIT_BGPHYD'));
                    }else{
                        lidffAttr.put('BGPPrefixLimit','');
                    }
                    if(attMap.containsKey('ATT_KEEPALIVE_BGPHYD')){
                        lidffAttr.put('BGPKeepalive',attMap.get('ATT_KEEPALIVE_BGPHYD'));
                    }else{
                        lidffAttr.put('BGPKeepalive','');
                    }
                    if(attMap.containsKey('ATT_PAYMENT_TERM_MILESTONE3_VALUE')){
                        lidffAttr.put('PTM3Value',attMap.get('ATT_PAYMENT_TERM_MILESTONE3_VALUE'));
                    }else{
                        lidffAttr.put('PTM3Value','');
                    }
                    if(attMap.containsKey('ATT_VPN_TYPE')){
                        lidffAttr.put('VPNType',attMap.get('ATT_VPN_TYPE'));
                    }else{
                        lidffAttr.put('VPNType','');
                    }
                    if(attMap.containsKey('ATT_AS_SET_BGPHYD')){
                        lidffAttr.put('AsSet',attMap.get('ATT_AS_SET_BGPHYD'));
                    }else{
                        lidffAttr.put('AsSet','');
                    }
                    if(attMap.containsKey('ATT_LAN_IPV6_SUBNET_MASK')){
                        lidffAttr.put('LANIPv6SubnetMask',attMap.get('ATT_LAN_IPV6_SUBNET_MASK'));
                    }else{
                        lidffAttr.put('LANIPv6SubnetMask','');
                    }
                    if(attMap.containsKey('ATT_DELIVERY_CHALLAN_DATE')){
                        lidffAttr.put('DCChallan',attMap.get('ATT_DELIVERY_CHALLAN_DATE'));
                    }else{
                        lidffAttr.put('DCChallan','');
                    }
                    if(attMap.containsKey('ATT_CROSS_CONNECT_PROVIDER_NAME')){
                        lidffAttr.put('CrossConnectProvName',attMap.get('ATT_CROSS_CONNECT_PROVIDER_NAME'));
                    }else{
                        lidffAttr.put('CrossConnectProvName','');
                    }
                    if(attMap.containsKey('ATT_CROSS_CONNECT_REQD')){
                        lidffAttr.put('CrossConnectReq',attMap.get('ATT_CROSS_CONNECT_REQD'));
                    }else{
                        lidffAttr.put('CrossConnectReq','');
                    }
                    if(attMap.containsKey('ATT_ROUTING_TABLE_BGP')){
                        lidffAttr.put('RoutingTable',attMap.get('ATT_ROUTING_TABLE_BGP'));
                    }else{
                        lidffAttr.put('RoutingTable','');
                    }
                    if(attMap.containsKey('ATT_TECH_CPE')){
                        lidffAttr.put('CPE',attMap.get('ATT_TECH_CPE'));
                    }else{
                        lidffAttr.put('CPE','');
                    }
                    if(attMap.containsKey('ATT_LAST_MILE')){
                        lidffAttr.put('LastMile',attMap.get('ATT_LAST_MILE'));
                    }else{
                        lidffAttr.put('LastMile','');
                    }
                    if(attMap.containsKey('ATT_CUSTOMER_LOOPBACK_IP_BGPHYD')){
                        lidffAttr.put('CustomerLoopback',attMap.get('ATT_CUSTOMER_LOOPBACK_IP_BGPHYD'));
                    }else{
                        lidffAttr.put('CustomerLoopback','');
                    }
                    if(attMap.containsKey('ATT_FAST_DETECT_BGPHYD')){
                        lidffAttr.put('FastDetect',attMap.get('ATT_FAST_DETECT_BGPHYD'));
                    }else{
                        lidffAttr.put('FastDetect','');
                    }
                    if(attMap.containsKey('ATT_OrderDeliveryType_CME')){
                        lidffAttr.put('OrderDeliveryType',attMap.get('ATT_OrderDeliveryType_CME'));
                    }else{
                        lidffAttr.put('OrderDeliveryType','');
                    }
                    if(attMap.containsKey('ATT_PaymentTermMilestone2Value_CME')){
                        lidffAttr.put('PTM2Value',attMap.get('ATT_PaymentTermMilestone2Value_CME'));
                    }else{
                        lidffAttr.put('PTM2Value','');
                    }
                    if(attMap.containsKey('ATT_TYPE_OF_CONNECTOR_CUSTOMER')){
                        lidffAttr.put('TypeofConnector',attMap.get('ATT_TYPE_OF_CONNECTOR_CUSTOMER'));
                    }else{
                        lidffAttr.put('TypeofConnector','');
                    }
                    if(attMap.containsKey('ATT_PAYMENT_TERM_MILESTONE5')){
                        lidffAttr.put('PTM5Name',attMap.get('ATT_PAYMENT_TERM_MILESTONE5'));
                    }else{
                        lidffAttr.put('PTM5Name','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV4_CE_SUBNET_MASK')){
                        lidffAttr.put('WANIPv4Subnet',attMap.get('ATT_WAN_IPV4_CE_SUBNET_MASK'));
                    }else{
                        lidffAttr.put('WANIPv4Subnet','');
                    }
                    if(attMap.containsKey('ATT_ANNUAL_REC_CHARGE')){
                        lidffAttr.put('AnnualRecurringCharge',attMap.get('ATT_ANNUAL_REC_CHARGE'));
                    }else{
                        lidffAttr.put('AnnualRecurringCharge','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV4_CE')){
                        lidffAttr.put('WANIPv4CE',attMap.get('ATT_WAN_IPV4_CE'));
                    }else{
                        lidffAttr.put('WANIPv4CE','');
                    }
                    if(attMap.containsKey('ATT_SUB_ORDER_TYPE_CFS')){
                        lidffAttr.put('OrderSubType',attMap.get('ATT_SUB_ORDER_TYPE_CFS'));
                    }else{
                        lidffAttr.put('OrderSubType','');
                    }
                    if(attMap.containsKey('ATT_HSN_CODE')){
                        lidffAttr.put('HSN/SACCode',attMap.get('ATT_HSN_CODE'));
                    }else{
                        lidffAttr.put('HSN/SACCode','');
                    }
                    if(attMap.containsKey('ATT_PORT_BANDWIDTH')){
                        lidffAttr.put('PortBandwidth',attMap.get('ATT_PORT_BANDWIDTH'));
                    }else{
                        lidffAttr.put('PortBandwidth','');
                    }
                    if(attMap.containsKey('ATT_PAYMENT_TERM_MILESTONE5_VALUE')){
                        lidffAttr.put('PTM5Value',attMap.get('ATT_PAYMENT_TERM_MILESTONE5_VALUE'));
                    }else{
                        lidffAttr.put('PTM5Value','');
                    }
                    if(attMap.containsKey('ATT_OPERATING_UNIT')){
                        lidffAttr.put('OperatingUnitList',attMap.get('ATT_OPERATING_UNIT'));
                    }else{
                        lidffAttr.put('OperatingUnitList','');
                    }
                    if(attMap.containsKey('ATT_CROSS_CONNECT_ARC')){
                        lidffAttr.put('CrossConnectARC',attMap.get('ATT_CROSS_CONNECT_ARC'));
                    }else{
                        lidffAttr.put('CrossConnectARC','');
                    }
                    if(attMap.containsKey('ATT_BGP_Timers')){
                        lidffAttr.put('BGPtimers',attMap.get('ATT_BGP_Timers'));
                    }else{
                        lidffAttr.put('BGPtimers','');
                    }
                    if(attMap.containsKey('ATT_LOCAL_LOOPBACK_IP_BGPHYD')){
                        lidffAttr.put('LocalLoopbackIP',attMap.get('ATT_LOCAL_LOOPBACK_IP_BGPHYD'));
                    }else{
                        lidffAttr.put('LocalLoopbackIP','');
                    }
                    if(attMap.containsKey('ATT_NBA_ID_CFS')){
                        lidffAttr.put('NBAID',attMap.get('ATT_NBA_ID_CFS'));
                    }else{
                        lidffAttr.put('NBAID','');
                    }
                    if(attMap.containsKey('ATT_CROSS_CONNECT_BANDWIDTH')){
                        lidffAttr.put('CrossConnectBandwidth',attMap.get('ATT_CROSS_CONNECT_BANDWIDTH'));
                    }else{
                        lidffAttr.put('CrossConnectBandwidth','');
                    }
                    if(attMap.containsKey('ATT_Add_LAN_IPV6_Subnet')){
                        lidffAttr.put('AddLANIPV6Subnet',attMap.get('ATT_Add_LAN_IPV6_Subnet'));
                    }else{
                        lidffAttr.put('AddLANIPV6Subnet','');
                    }
                    if(attMap.containsKey('ATT_PO_DATE')){
                        lidffAttr.put('PODate',attMap.get('ATT_PO_DATE'));
                    }else{
                        lidffAttr.put('PODate','');
                    }
                    if(attMap.containsKey('ATT_DDOS_MITIGATION_BANDWIDTH')){
                        lidffAttr.put('DDOSMitigationBW',attMap.get('ATT_DDOS_MITIGATION_BANDWIDTH'));
                    }else{
                        lidffAttr.put('DDOSMitigationBW','');
                    }
                    if(attMap.containsKey('VEPC_ATTR_CONTACT_LAST_NAME')){
                        lidffAttr.put('LocalConLastName',attMap.get('VEPC_ATTR_CONTACT_LAST_NAME'));
                    }else{
                        lidffAttr.put('LocalConLastName','');
                    }
                    if(attMap.containsKey('ATT_DEPENDENT_LINK_LSI')){
                        lidffAttr.put('dependentLsi',attMap.get('ATT_DEPENDENT_LINK_LSI'));
                    }else{
                        lidffAttr.put('dependentLsi','');
                    }
                    if(attMap.containsKey('ATT_MULTIPLIER_BGPHYD')){
                        lidffAttr.put('Multiplier',attMap.get('ATT_MULTIPLIER_BGPHYD'));
                    }else{
                        lidffAttr.put('Multiplier','');
                    }
                    if(attMap.containsKey('ATT_Third_Party_OTC')){
                        lidffAttr.put('ThirdPartyOTC',attMap.get('ATT_Third_Party_OTC'));
                    }else{
                        lidffAttr.put('ThirdPartyOTC','');
                    }
                    if(attMap.containsKey('ATT_BGP_INPUT_TYPE_BGPHYD')){
                        lidffAttr.put('BGPInputType',attMap.get('ATT_BGP_INPUT_TYPE_BGPHYD'));
                    }else{
                        lidffAttr.put('BGPInputType','');
                    }
                    if(attMap.containsKey('ATT_Multicast_Required_CFS')){
                        lidffAttr.put('MulticastRequired',attMap.get('ATT_Multicast_Required_CFS'));
                    }else{
                        lidffAttr.put('MulticastRequired','');
                    }
                    if(attMap.containsKey('ATT_DEFAULT_ORIGINATE_BGPHYD')){
                        lidffAttr.put('DefaultOriginate',attMap.get('ATT_DEFAULT_ORIGINATE_BGPHYD'));
                    }else{
                        lidffAttr.put('DefaultOriginate','');
                    }
                    if(attMap.containsKey('ATT_SOO_BGPHYD')){
                        lidffAttr.put('BGPSOO',attMap.get('ATT_SOO_BGPHYD'));
                    }else{
                        lidffAttr.put('BGPSOO','');
                    }
                    if(attMap.containsKey('ATT_EIGRP_Password')){
                        lidffAttr.put('EIGRPPassword',attMap.get('ATT_EIGRP_Password'));
                    }else{
                        lidffAttr.put('EIGRPPassword','');
                    }
                    if(attMap.containsKey('ATT_PaymentTermMilestone5_CME')){
                        lidffAttr.put('PaymentTerm–5',attMap.get('ATT_PaymentTermMilestone5_CME'));
                    }else{
                        lidffAttr.put('PaymentTerm–5','');
                    }
                    if(attMap.containsKey('ATT_PaymentTermMilestone4_CME')){
                        lidffAttr.put('PaymentTerm–4',attMap.get('ATT_PaymentTermMilestone4_CME'));
                    }else{
                        lidffAttr.put('PaymentTerm–4','');
                    }
                    if(attMap.containsKey('ATT_PaymentTermMilestone3_CME')){
                        lidffAttr.put('PaymentTerm–3',attMap.get('ATT_PaymentTermMilestone3_CME'));
                    }else{
                        lidffAttr.put('PaymentTerm–3','');
                    }
                    if(attMap.containsKey('ATT_PaymentTermMilestone2_CME')){
                        lidffAttr.put('PaymentTerm–2',attMap.get('ATT_PaymentTermMilestone2_CME'));
                    }else{
                        lidffAttr.put('PaymentTerm–2','');
                    }
                    if(attMap.containsKey('ATT_PaymentTermMilestone1_CME')){
                        lidffAttr.put('PaymentTerm–1',attMap.get('ATT_PaymentTermMilestone1_CME'));
                    }else{
                        lidffAttr.put('PaymentTerm–1','');
                    }
                    if(attMap.containsKey('ATT_PO_NUMBER')){
                        lidffAttr.put('PoNumber',attMap.get('ATT_PO_NUMBER'));
                    }else{
                        lidffAttr.put('PoNumber','');
                    }
                    if(attMap.containsKey('ATT_VENDOR_PR_NUMBER')){
                        lidffAttr.put('PRNumber',attMap.get('ATT_VENDOR_PR_NUMBER'));
                    }else{
                        lidffAttr.put('PRNumber','');
                    }
                    if(attMap.containsKey('ATT_VPN_NAME')){
                        lidffAttr.put('VPNName',attMap.get('ATT_VPN_NAME'));
                    }else{
                        lidffAttr.put('VPNName','');
                    }
                    if(attMap.containsKey('ATT_WAN_IPV6_PE_SUBNET_MASK')){
                        lidffAttr.put('WANIPv6PESubnetMask',attMap.get('ATT_WAN_IPV6_PE_SUBNET_MASK'));
                    }else{
                        lidffAttr.put('WANIPv6PESubnetMask','');
                    }
                    if(attMap.containsKey('ATT_BGP_PASSWORD_BGPHYD')){
                        lidffAttr.put('BGPPassword',attMap.get('ATT_BGP_PASSWORD_BGPHYD'));
                    }else{
                        lidffAttr.put('BGPPassword','');
                    }
                    if(attMap.containsKey('ATT_CROSS_CONNECT_OFFERING')){
                        lidffAttr.put('CrossConOff',attMap.get('ATT_CROSS_CONNECT_OFFERING'));
                    }else{
                        lidffAttr.put('CrossConOff','');
                    }
                    if(attMap.containsKey('ATT_PEERING_TYPE_BGPHYD')){
                        lidffAttr.put('PeeringType',attMap.get('ATT_PEERING_TYPE_BGPHYD'));
                    }else{
                        lidffAttr.put('PeeringType','');
                    }
                    if(attMap.containsKey('ATT_CONTRACT_TERM')){
                        lidffAttr.put('ContractTerm',attMap.get('ATT_CONTRACT_TERM'));
                    }else{
                        lidffAttr.put('ContractTerm','');
                    }
                    if(attMap.containsKey('B2CCmex_ATTR_SERIAL_NUMBER')){
                        lidffAttr.put('PartSerialNumber',attMap.get('B2CCmex_ATTR_SERIAL_NUMBER'));
                    }else{
                        lidffAttr.put('PartSerialNumber','');
                    }
                    if(attMap.containsKey('ATT_ROUTER_MODEL')){
                        lidffAttr.put('RouterModel',attMap.get('ATT_ROUTER_MODEL'));
                    }else{
                        lidffAttr.put('RouterModel','');
                    }
                    if(attMap.containsKey('ATT_LSI')){
                        lidffAttr.put('Lsi',attMap.get('ATT_LSI'));
                    }else{
                        lidffAttr.put('Lsi','');
                    }
                } 
                lidffAttr.put('DowntimeEndDateTime',oiList[0].Order.Downtime_End__c);
                lidffAttr.put('PMEmail',oiList[0].Order.PM_Email__c);
                lidffAttr.put('CriteriaMVGId','');
                lidffAttr.put('PMName',oiList[0].Order.PM_Name__c);
                //lidffAttr.put('RTBH','');
                lidffAttr.put('VerticleSegment',oiList[0].Order.Account.ARTL_Service_Segment__c);
                lidffAttr.put('ISPMaterialCost','');
                lidffAttr.put('Currency',oiList[0].Order.ARTL_Currency_ISO_Code__c);
                //lidffAttr.put('BGPHoldtime','');
                lidffAttr.put('TPBW','');
                //lidffAttr.put('DependentId','');
                lidffAttr.put('SiteReadinessDate','');
                lidffAttr.put('InfraCost','');
                lidffAttr.put('ZSMFirstName','');
                lidffAttr.put('KDMFirstName','');
                lidffAttr.put('ZSMMobile','');
                //if(String.isNotBlank(String.valueOf(oiList[0].vlocity_cmt__BillingAccountId__r.Parent.CreatedDate))){
                //    lidffAttr.put('NBACreationDate',DateTime.valueOf(oiList[0].vlocity_cmt__BillingAccountId__r.Parent.CreatedDate));
                //}
                lidffAttr.put('NBACreationDate',oiList[0].vlocity_cmt__BillingAccountId__r.Parent.CreatedDate);
                lidffAttr.put('KAMContact',oiList[0].Order.Opportunity.Owner.Name);
                lidffAttr.put('PTM3Name','');
                lidffAttr.put('TestingRemarks','');
                lidffAttr.put('DependentType','');
                lidffAttr.put('DomainName','');
                lidffAttr.put('DOAID','');
                lidffAttr.put('PMContact',oiList[0].Order.PM_Phone__c);
                //lidffAttr.put('WANIPv4CESubnetMask','');
                //lidffAttr.put('HandoverType','');
                lidffAttr.put('LocalConNumber','');
                lidffAttr.put('CVLAN','');
                //lidffAttr.put('CrossConnectLocB','');
                //lidffAttr.put('CrossConnectLocA','');
                lidffAttr.put('FXLeoAcntNo','');
                //lidffAttr.put('OSPFProcessId','');
                lidffAttr.put('SendCommunityeBGP','');
                lidffAttr.put('BulkImpIdNew','');
                lidffAttr.put('PMLastName','');
                lidffAttr.put('FXBillFranchiseTaxCode','');
                //lidffAttr.put('RoutingProtocol','');
                lidffAttr.put('ParentLSI','');
                if(oiList[0].ARTL_Latest_PO__c != null){
                    lidffAttr.put('PONumber',oiList[0].ARTL_Latest_PO__r.ARTL_PO_Number__c);
                }else{
                    lidffAttr.put('PONumber',''); 
                }
                //lidffAttr.put('DependentLSIMedia','');
                lidffAttr.put('Product','');
                //lidffAttr.put('WANIPv6CE','');
                lidffAttr.put('SRSubType','');
                lidffAttr.put('BusinessCircle',oiList[0].Order.Account.ARTL_Business_Circle_Region__c);
                //lidffAttr.put('AddLANIPV4Subnet','');
                //lidffAttr.put('MediaMode','');
                lidffAttr.put('PTM1Value','');
                //lidffAttr.put('CircuitId','');
                lidffAttr.put('SRType','');
                lidffAttr.put('TPIP1BTSID','');
                //lidffAttr.put('LANIPv4SubnetMask','');
                lidffAttr.put('FeasilibityId',oiList[0].ARTL_Feasibility__c);
                lidffAttr.put('LocatorId','');
                lidffAttr.put('Taxation',oiList[0].vlocity_cmt__BillingAccountId__r.ARTL_Taxation__c);
                lidffAttr.put('SRCreatedDate','');
                //lidffAttr.put('CustomerNeedByDate',oiList[0].CND_Date__c);
                if(String.isNotBlank(oiList[0].CND_Date__c)){
                    String dtStr = oiList[0].CND_Date__c;
                    list<String> lstSplitDate = dtStr.split('-');
                    Date dt = date.newinstance(Integer.valueOf(lstSplitDate[0]), Integer.valueOf(lstSplitDate[1]), Integer.valueOf(lstSplitDate[2]));
                    system.debug('dt : '+dt);
                    lidffAttr.put('CustomerNeedByDate',dt);  
                }
                //lidffAttr.put('DDOSRequired','');
                lidffAttr.put('LocalConName','');
                //lidffAttr.put('SubProductName','');
                //lidffAttr.put('Restart','');
                lidffAttr.put('DowntimeStartDateTime','');
                lidffAttr.put('ChannelPartnerName','');
                //lidffAttr.put('PTM2Name','');
                lidffAttr.put('OSPROWCost','');
                lidffAttr.put('TPFeasibilityClDate','');
                lidffAttr.put('LegalEntity',oiList[0].Order.Account.ARTL_Legal_Entity__c);
                lidffAttr.put('HansenOMOrder',oiList[0].Order.ARTL_SOMOrderId__c);
                //lidffAttr.put('ItemCode','');
                //lidffAttr.put('ProductApprovalAddIP','');
                //lidffAttr.put('OEOrderSubType','');
                lidffAttr.put('DeliveryChallanNo','');
                lidffAttr.put('CrossConnectOTC',oiList[0].ARTL_FeasibilityIdCrossConnect__c);
                lidffAttr.put('BlendedRate','');
                //lidffAttr.put('ItemDescription','');
                lidffAttr.put('OSPCost','');
                //lidffAttr.put('BGPReplaceAS','');
                //lidffAttr.put('BGPlog','');
                lidffAttr.put('PartNo','');
                lidffAttr.put('BA',oiList[0].vlocity_cmt__BillingAccountId__c);
                //lidffAttr.put('PTM4Value','');
                lidffAttr.put('SubscriptionType','');
                lidffAttr.put('CustomerContactName','');
                lidffAttr.put('ApprovalDate','');
                lidffAttr.put('City',oiList[0].Order.Account.BillingCity);
                lidffAttr.put('LocalConFstName','');
                lidffAttr.put('MediaConverterMake','');
                //lidffAttr.put('MediaType','');
                lidffAttr.put('Address3','');
                lidffAttr.put('Address2','');
                lidffAttr.put('Address1',oiList[0].Order.Account.BillingAddress);
                //lidffAttr.put('BGPdampening','');
                lidffAttr.put('ChannelPartnerCode','');
                //lidffAttr.put('TPFeasibilityRemarks','');
                //lidffAttr.put('WANIPv4PE','');
                lidffAttr.put('BARequired','');
                //lidffAttr.put('CrossConnectFeasibilityId','');
                //lidffAttr.put('DeliveryChallanDate','');
                lidffAttr.put('CustomerName','');
                //lidffAttr.put('LinkTopology','');
                //lidffAttr.put('WANIPV4Subnet3','');
                //lidffAttr.put('EIGRPProcessId','');
                //lidffAttr.put('WANIPV4Subnet2','');
                lidffAttr.put('WANIPV4Subnet1','');
                //lidffAttr.put('AirtelLoopback','');
                lidffAttr.put('PartnerLocB','');
                lidffAttr.put('PartnerLocA','');
                lidffAttr.put('RFS',oiList[0].RFS_Date__c);
                lidffAttr.put('OrderTypeId','');
                lidffAttr.put('ManageBy','');
                lidffAttr.put('AppointmentId','');
                lidffAttr.put('Latitude','');
                lidffAttr.put('AppointmentSlot','');
                lidffAttr.put('MediaConverterModel','');
                //lidffAttr.put('OSPFPassword','');
                lidffAttr.put('KDMName','');
                //lidffAttr.put('RemovePrivateAs','');
                //lidffAttr.put('AccessBandwidth','');
                lidffAttr.put('AMFirstName','');
                lidffAttr.put('SRSubSubType','');
                lidffAttr.put('Percentages4','');
                lidffAttr.put('Percentages3','');
                lidffAttr.put('Percentages2','');
                lidffAttr.put('Percentages1','');
                lidffAttr.put('KDMLastName','');
                //lidffAttr.put('PTM1Name','');
                lidffAttr.put('ISPCost','');
                lidffAttr.put('State','');
                //lidffAttr.put('LANIPv6','');
                //lidffAttr.put('TPFeasibilityId','');
                lidffAttr.put('ISPServiceCost','');
                //lidffAttr.put('LANIPv4','');
                lidffAttr.put('CustomerContactNumber','');
                lidffAttr.put('MulticastModel','');
                lidffAttr.put('OrderType',oiList[0].Order.ARTL_Order_Type__c);
                //lidffAttr.put('eBGPmultihop','');
                lidffAttr.put('PartyId',oiList[0].vlocity_cmt__BillingAccountId__r.vlocity_cmt__PartyId__c);
                //lidffAttr.put('BFD','');
                lidffAttr.put('HardwareModel','');
                lidffAttr.put('KAMEmail','');
                lidffAttr.put('PartDescription','');
                //lidffAttr.put('WarehouseLocation','');
                //lidffAttr.put('CrossConnectMode','');
                lidffAttr.put('CustomerProjectManagerContact','');
                lidffAttr.put('DispatchStoreLocation','');
                lidffAttr.put('Parent4GRALSI','');
                lidffAttr.put('ChargeableDistance','');
                //lidffAttr.put('MinimumInterval','');
                lidffAttr.put('NewFlag','');
                lidffAttr.put('KAMLstname','');
                //lidffAttr.put('RoutingType','');
                //lidffAttr.put('WANIPv4PESubnetMask','');
                //lidffAttr.put('RouterMake','');
                //lidffAttr.put('RemoteLoopbackIP','');
                lidffAttr.put('SFPType','');
                lidffAttr.put('HardwareType','');
                //lidffAttr.put('DeleteLANIPV6','');
                //lidffAttr.put('DeleteLANIPV4','');
                //lidffAttr.put('POP','');
                //lidffAttr.put('CustomerLANIPV6','');
                lidffAttr.put('LicenseCompany','');
                lidffAttr.put('CustomerLANIPV4','');
                lidffAttr.put('SRNumber','');
                lidffAttr.put('Source','');
                lidffAttr.put('AMEmailID','');
                lidffAttr.put('BTSAddress','');
                lidffAttr.put('KDMEmail','');
                //lidffAttr.put('MTUSize','');
                lidffAttr.put('BCP','');
                lidffAttr.put('ThirdPartyARC','');
                lidffAttr.put('SupportServicesType','');
                //lidffAttr.put('BGPSessionPerLink','');
                //lidffAttr.put('WANIPv6Subnet','');
                lidffAttr.put('OSPServiceCost','');
                //lidffAttr.put('CrossConnectType','');
                lidffAttr.put('MiscellaneousTestCri','');
                //lidffAttr.put('IPRequired','');
                lidffAttr.put('HardwareOwnership','');
                //lidffAttr.put('RSUNWLocCode','');
                lidffAttr.put('ProductValidator','');
                //lidffAttr.put('ThirdPartyName','');
                lidffAttr.put('AppointmentDate','');
                //lidffAttr.put('Redundancy','');
                //lidffAttr.put('AdditionalProvisionedLANIPv6','');
                //lidffAttr.put('AdditionalProvisionedLANIPv4','');
                lidffAttr.put('Percentages','');
                lidffAttr.put('WANIPv4Pool3','');
                lidffAttr.put('WANIPv4Pool2','');
                lidffAttr.put('WANIPv4Pool1','');
                lidffAttr.put('PartnerType','');
                lidffAttr.put('PMFirstName','');
                //lidffAttr.put('WANIPv6CESubnetMask','');
                lidffAttr.put('Size','');
                //lidffAttr.put('VPNTopology','');
                lidffAttr.put('FtwzFlag','');
                lidffAttr.put('KAMFirstName','');
                lidffAttr.put('ISPMPLSPOPNWLocCode','');
                lidffAttr.put('NNIType','');
                lidffAttr.put('ServiceTypeLine','');
                //lidffAttr.put('AsOveride','');
                //lidffAttr.put('WANIPv6PE','');
                lidffAttr.put('TownType','');
                lidffAttr.put('Longitude','');
                //lidffAttr.put('AddLANIPV6','');
                //lidffAttr.put('AddLANIPV4','');
                //lidffAttr.put('Warehouse','');
                //lidffAttr.put('SiteReadiness','');
                //lidffAttr.put('BGPPrefixLimit','');
                lidffAttr.put('ActionCode','');
                lidffAttr.put('OrderHeaderId','');
                lidffAttr.put('Multicastgroupaddr','');
                //lidffAttr.put('BGPKeepalive','');
                //lidffAttr.put('PTM3Value','');
                lidffAttr.put('Qty','');
                lidffAttr.put('NNIDetails','');
                //lidffAttr.put('VPNType','');
                //lidffAttr.put('AsSet','');
                lidffAttr.put('TPMedia','');
                lidffAttr.put('OrderCreationDate',oiList[0].CreatedDate);
                lidffAttr.put('AMLastName','');
                lidffAttr.put('Multicastsourceaddr','');
                //lidffAttr.put('LANIPv6SubnetMask','');
                //lidffAttr.put('DCChallan','');
                lidffAttr.put('BulkAttachment','');
                lidffAttr.put('ZSMLastName','');
                lidffAttr.put('SittingAreaType','');
                lidffAttr.put('NearestPOPCode','');
                lidffAttr.put('CustomerContactEmailId',oiList[0].Order.Customer_Email__c);
                lidffAttr.put('OSPMaterialCost','');
                lidffAttr.put('OffNetTotalBOQ','');
                lidffAttr.put('CustomerASNumber','');
                //lidffAttr.put('CrossConnectProvName','');
                //lidffAttr.put('CrossConnectReq','');
                //lidffAttr.put('RoutingTable','');
                lidffAttr.put('CustomerProjectManagerFirstName','');
                //lidffAttr.put('CPE','');
                //lidffAttr.put('LastMile','');
                //lidffAttr.put('CustomerLoopback','');
                //lidffAttr.put('FastDetect','');
                lidffAttr.put('BTSNWLocCode','');
                lidffAttr.put('AccessPOPNWLocCode','');
                //lidffAttr.put('OrderDeliveryType','');
                lidffAttr.put('CustomerProjectManagerEmail','');
                //lidffAttr.put('PTM2Value','');
                //lidffAttr.put('TypeofConnector','');
                lidffAttr.put('CustomerSegment','');
                lidffAttr.put('PMTLContact','');
                lidffAttr.put('KDMContact','');
                lidffAttr.put('ZSMOLMID','');
                //lidffAttr.put('PTM5Name','');
                //lidffAttr.put('WANIPv4Subnet','');
                lidffAttr.put('ARCChargeValuePerUnit','');
                //lidffAttr.put('AnnualRecurringCharge','');
                lidffAttr.put('B2BYoYOrder','');
                lidffAttr.put('CustomerProjectManagerLastName','');
                //lidffAttr.put('WANIPv4CE','');
                //lidffAttr.put('OrderSubType','');
                lidffAttr.put('SubscriptionModel','');
                //lidffAttr.put('HSN/SACCode','');
                //lidffAttr.put('PortBandwidth','');
                //lidffAttr.put('PTM5Value','');
                lidffAttr.put('IntegrationId','');
                lidffAttr.put('PMOLMId','');
                lidffAttr.put('Pincode',oiList[0].vlocity_cmt__BillingAccountId__r.ARTL_Billing_Pincode__c);
                //lidffAttr.put('OperatingUnitList','');
                //lidffAttr.put('CrossConnectARC','');
                //lidffAttr.put('BGPtimers','');
                //lidffAttr.put('LocalLoopbackIP','');
                //lidffAttr.put('NBAID','');
                //lidffAttr.put('CrossConnectBandwidth','');
                //lidffAttr.put('AddLANIPV6Subnet','');
                //lidffAttr.put('PODate','');
                //lidffAttr.put('DDOSMitigationBW','');
                lidffAttr.put('FinRespConId','');
                //lidffAttr.put('LocalConLastName','');
                //lidffAttr.put('dependentLsi','');
                //lidffAttr.put('Multiplier','');
                //lidffAttr.put('ThirdPartyOTC','');
                //lidffAttr.put('BGPInputType','');
                lidffAttr.put('SiteId','');
                //lidffAttr.put('MulticastRequired','');
                //lidffAttr.put('DefaultOriginate','');
                //lidffAttr.put('BGPSOO','');
                //lidffAttr.put('EIGRPPassword','');
                //lidffAttr.put('PaymentTerm–5','');
                //lidffAttr.put('PaymentTerm–4','');
                //lidffAttr.put('PaymentTerm–3','');
                //lidffAttr.put('PaymentTerm–2','');
                //lidffAttr.put('PaymentTerm–1','');
                lidffAttr.put('LocalConEmail','');
                //lidffAttr.put('PoNumber','');
                //lidffAttr.put('PRNumber','');
                //lidffAttr.put('VPNName','');
                //lidffAttr.put('WANIPv6PESubnetMask','');
                lidffAttr.put('ImplementationCircle','');
                lidffAttr.put('AMOLMId','');
                //lidffAttr.put('BGPPassword','');
                lidffAttr.put('PTM4Name','');
                lidffAttr.put('ShortCode','');
                //lidffAttr.put('CrossConOff','');
                lidffAttr.put('LinkType','');
                lidffAttr.put('ZSMEmail','');
                lidffAttr.put('KAMName','');
                lidffAttr.put('PMTLName','');
                lidffAttr.put('OrderInitiatedby','');
                lidffAttr.put('AMContactNumber','');
                //lidffAttr.put('PeeringType','');
                //lidffAttr.put('ContractTerm','');
                lidffAttr.put('PMTLEmail','');
                //lidffAttr.put('PartSerialNumber','');
                lidffAttr.put('ServiceSegment','');
                lidffAttr.put('VANBANumber','');
                //lidffAttr.put('RouterModel','');
                //lidffAttr.put('Lsi','');
                lidffAttr.put('CustomerNWLocCode','');
                lidffAttr.put('HardwareLegalEntity','');
                lidffAttr.put('CrossConnThirdParty','');
                lidffAttr.put('PMTLOLM','');
            }
            sfdcMsg.put('B2BLineItemDFFAttribBC',lidffAttr);
            resBody.put('SFDCMessage',sfdcMsg);
            outMap.put('resBody',resBody);
        }catch(Exception ex){

        }
    }
}